* {
    margin: 0;
    padding: 0;   /*each element will have margin 0 as default*/
}

body {
    background: #E9ECF4;
    color: #000;
    font-family: 'Roboto', sans-serif;

}

.contenedor {
    width: 90%;
    max-width: 2000px;
    margin: 20px auto;
    border: 1px solid black;
    display: grid; /*1rst step, named the main container as grid*/
    grid-gap: 20px; /*gap between each box in the container*/
    grid-template-columns: repeat(3, 1fr); /*[1fr 1fr 1fr]will have 3 columns; one for the widget 1, the second widget 2 and third for the sidebar*/
    grid-template-rows: repeat(4,auto); /*numbers of rows i will have. Auto para que se adapte al tamanio de cada fraccion*/
}

.contenedor > div,      /*each div inside container*/
.contenedor .header,
.contenedor .contenido,
.contenedor .sidebar,
.contenedor .footer {

    background: #fff;
    padding: 20px;
    border-radius: 4px;

}

.contenedor .header {
    background: #12203e;
    color: #fff;
    grid-column-start: 1; /*indicate the column where start*/
    grid-column-end: 4;/*or -1, if we don't know how many columns there are*/
}

.contenedor .contenido{
    grid-column: span 2; /*in that way, it indicates to take 2 columns*/
}

.contenedor .sidebar {
    grid-column: 3 / 4 ; /*star colum 3 and finish in 5. the sidebar will not move*/
    background: #faa43d;
    text-align: center;
    min-height: 100px; /*when screen gets smaller*/
    /*use flexbox to adjust element position*/
    display: flex;
    align-items: center; /*vertically*/
    justify-content: center; /*Horizontally*/

    grid-row: span 2; /* same as 2 / 4 */
}

.contenedor .widget-1,
.contenedor .widget-2 {
    background: #55a8fd;
    color: #fff;
    height: 100px;
    text-align: center;
    /*apply Flexbox for the fix item*/
    display: flex;
    align-items: center;
    justify-content: center;
}

.contenedor .footer{
    background: #12203e;
    color: #fff;
    grid-column: span 3;
}

/*---Make the content responsive---*/

@media screen and (max-width: 768px){
    .contenedor .contenido {
        grid-column: 1 / -1; /*indicates it will only have one column*/ 
    }

    .contenedor .sidebar {
        grid-column: 1 / -1; /*indicates it will only have one column*/ 
    }

    .contenedor .widget-1{
        grid-column: span 3;
    }

    .contenedor .widget-2{
        grid-column: span 3;
    }
}


/*
     N O T A S

     Reapeat function miltuple the arguments
     reapeat(<integer>, <(fr)column> <(fr)row>)

css grid is used for crearing structure while flexbox for we want to adjust element horizontaly or vertically

1fr = one fraction of the box

*/

